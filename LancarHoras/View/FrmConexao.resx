<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABMUQBMUQBMUQBMUQBMUQBMUQBMUQBMUQBLUABLUABLUABLUABLUABLUABLUABLUABLUABL
        UABMUQBLUABMUQBMUQBMUQBMUQBMUQBMUQBMUQBMUQAAAAAAAAAAAABMUQBMUQBLUABLUABLUABKTwBK
        TwBKTwBKTwBJTgBJTgBJTgBITQBITQBITQBITQBITQBJTgBJTgBJTgBJTgBKTwBKTwBKTwBLUABLUABL
        UABLUABMUQBMUQAAAABMUQBMUQBLUABLUABKTwBKTwBJTgBJTgBITQBITQBHTABHTABGSwBGSwBFSgBF
        SgBFSgBGSwBGSwBHTABHTABHTABITQBITQBJTgBJTgBKTwBKTwBLUABLUABMUQBMUQBMUQBKTwBKTwBK
        TwBKTgFITQBHTABHTABGSwBFSgBESQBESQBDSABDSABCRwBCRwBCRwBDSABDSABESQBESQBFSgBFSgBG
        SwBHTABITQBITQBJTgBKTwBLUABLUABMUQBPVAVaXxVRVgpJTgFGSwBGSwBGSwBFSgBESABDSABCRwBC
        RgBBRgBBRQBARQBARQBARQBBRQBBRgBCRgBCRwBCRwBDSABESQBFSgBGSwBHTABITQBJTgBKTwBLUABM
        UQBQVQZjaCJiZyNdYRxRVg9GSwJCRwBDSABDRwBBRgBARQBARAA/RAA/QwA+QwA+QwA+QwA/RABARABA
        RQBARQBBRgBBRgBDSABESQBGSwBGSwBHTABJTgBKTwBLUABMUQBQVQZhZiBhZSFgZCJfYyNaXx5OUhBC
        RwI/RABARAA/RAA+QwA9QgA9QQA8QQA8QQA8QQA9QQA+QgA+QwA/QwA/RABARABBRgBDSABESQBGSwBG
        SwBITQBJTgBLUABMUQBPVAZhZSBhZSFeYiFcYSBcYCJcYCNWWh5JTQ09QgA9QQA/QwM/QwQ+QgQ9QgM8
        QAI7PwA7PwA8QAA/QwNBRQRBRQRBRQNARQBBRgBDSABESQBFSgBHTABJTgBKTwBMUQBPVAZhZSBgZCFe
        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
        WiFXWyFYWyFZXCFZXSBcYCNPUxFCRwBGSwBHTABJTgBKTwBMUQBQVQZiZyBhZiFgZCFfYyFeYiFeYSFd
        YSFbYCFaXiFaXiFZXSFZXSFZXCFYWyFXWyFXWyFXWyFYXCFYXCFZXCFaXSFaXiFaXyFcYCJaXx9HSwNG
        SwBITQBKTwBLUABMUQBQVQZiZyFhZiFhZSFgZCFfYyFeYiFdYSFcYSFbYCFaXyFaXyFaXiFaXiFaXiFZ
        XSFZXSFZXSFaXiFaXiFaXyFaXyFbYCFcYCFcYSBfYyNRVg9GSwBKTwBKTwBLUABMUQBPVARiZyBiZyFh
        ZiFhZSFgZCFgYyFfYyFeYiFdYiFdYSFcYSFcYCFbYCFbYCFaXyFaXyFbXyFbYCFbYCFcYSFcYSFdYiFe
        YiFeYiFgZCJdYRxJTgBKTwBLUABLUABMUQBKTwBZXhRlaiZiZyFhZiFhZiFhZiFhZSFhZSFgZCFgZCFf
        YyFfYyFeYiFeYiFdYSFdYSFdYiFeYiFeYiFfYyFfYyFgZCFgZCFhZSFhZSFiZyNRVQlKTwBMUQBMUQBM
        UQAAAABMUQFZXhNiZyBiZyBiZyBhZiBhZiBhZiBhZSBgZSBgZSBgZSBgZCBgZCBgZCBfYyBgZCBgZCBg
        ZCBgZSBgZSBhZSBhZSBhZiBhZh9jaCJZXhVKTwBMUQBMUQAAAAAAAAAAAABKTwBPVARQVQZQVQZQVQZQ
        VQZQVQZPVQZPVAZPVAZPVAZPVAZPVAZPVAZPVAZPVAZPVAZPVAZPVAZPVAZPVAZPVAZPVAZQVQZQVQZP
        VAVMUQBMUQAAAAAAAADAAAADgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAAABwAAAAw==
</value>
  </data>
</root>